<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="BlackConnectSettings" triggerOnEachSave="true" triggerOnReformat="true" />
  <component name="ChangeListManager">
    <list default="true" id="6f1379ba-f54c-43a3-b290-b5ba86f85129" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Jupyter Notebook" />
        <option value="Python Unit Test" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="recentNewPullRequestHead">
      <RepoCoordinatesHolder>
        <option name="owner" value="covid19ABM" />
        <option name="repository" value="comma" />
      </RepoCoordinatesHolder>
    </option>
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="0b5d3f57-4d8b-4892-96ce-a57149af8ad7" />
        <option name="url" value="git@github.com:covid19ABM/comma.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2NYUjBYhhGSoFUE20p58pHMD5oz" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "Python tests.pytest for test_ipf_sampling.TestDataSamplingIPF.test_data_sampling_ipf.executor": "Run",
    "Python tests.pytest in test_hypothesis.py.executor": "Run",
    "Python tests.pytest in test_individual.py.executor": "Run",
    "Python tests.pytest in test_ipf_sampling.py.executor": "Run",
    "Python tests.pytest in test_model.py.executor": "Run",
    "Python tests.pytest in test_validate_csvs.py.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "fixes",
    "last_opened_file_path": "/Users/evaviviani/github/comma",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "com.jetbrains.python.black.configuration.BlackFormatterConfigurable",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/docs" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="?" />
      <command value="python" />
    </option>
  </component>
  <component name="RunManager" selected="Python tests.pytest in test_individual.py">
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <module name="mhm" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="true" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_hypothesis.TestHypothesis.test_scaling" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="mhm" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_hypothesis.TestHypothesis.test_scaling&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_individual.TestIndividual.test_actions_when_positive" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="mhm" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_individual.TestIndividual.test_actions_when_positive&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_individual.TestIndividual.test_long_covid" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="mhm" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_individual.TestIndividual.test_long_covid&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_ipf_sampling.TestDataSamplingIPF.test_data_sampling_ipf" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="mhm" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_ipf_sampling.TestDataSamplingIPF.test_data_sampling_ipf&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_model.TestModel.test_recovery_status_reset" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="mhm" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_model.TestModel.test_recovery_status_reset&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest in test_hypothesis.py" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="mhm" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="$USER_HOME$/opt/anaconda3/envs/py39/bin/python" />
      <option name="SDK_NAME" value="py39 (2)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests/test_hypothesis.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest in test_individual.py" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="mhm" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="$USER_HOME$/opt/anaconda3/envs/py39/bin/python" />
      <option name="SDK_NAME" value="py39 (2)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests/test_individual.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest in test_ipf_sampling.py" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="mhm" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests/test_ipf_sampling.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest in test_model.py" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="mhm" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="$USER_HOME$/opt/anaconda3/envs/py39/bin/python" />
      <option name="SDK_NAME" value="py39 (2)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests/test_model.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest in test_validate_csvs.py" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="mhm" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="$USER_HOME$/opt/anaconda3/envs/py39/bin/python" />
      <option name="SDK_NAME" value="py39 (2)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests/test_validate_csvs.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python tests.pytest in test_hypothesis.py" />
      <item itemvalue="Python tests.pytest in test_individual.py" />
      <item itemvalue="Python tests.pytest in test_ipf_sampling.py" />
      <item itemvalue="Python tests.pytest in test_model.py" />
      <item itemvalue="Python tests.pytest in test_validate_csvs.py" />
      <item itemvalue="Python tests.pytest for test_ipf_sampling.TestDataSamplingIPF.test_data_sampling_ipf" />
      <item itemvalue="Python tests.pytest for test_hypothesis.TestHypothesis.test_scaling" />
      <item itemvalue="Python tests.pytest for test_individual.TestIndividual.test_actions_when_positive" />
      <item itemvalue="Python tests.pytest for test_individual.TestIndividual.test_long_covid" />
      <item itemvalue="Python tests.pytest for test_model.TestModel.test_recovery_status_reset" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.pytest for test_ipf_sampling.TestDataSamplingIPF.test_data_sampling_ipf" />
        <item itemvalue="Python tests.pytest for test_individual.TestIndividual.test_actions_when_positive" />
        <item itemvalue="Python tests.pytest for test_individual.TestIndividual.test_long_covid" />
        <item itemvalue="Python tests.pytest for test_model.TestModel.test_recovery_status_reset" />
        <item itemvalue="Python tests.pytest for test_hypothesis.TestHypothesis.test_scaling" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-5a2391486177-2887949eec09-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.13763.11" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6f1379ba-f54c-43a3-b290-b5ba86f85129" name="Changes" comment="" />
      <created>1679840641785</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1679840641785</updated>
      <workItem from="1679840643297" duration="599000" />
      <workItem from="1681113448368" duration="57357000" />
      <workItem from="1682413019798" duration="8747000" />
      <workItem from="1683555085056" duration="6704000" />
      <workItem from="1683898231816" duration="15000" />
      <workItem from="1683898732336" duration="4260000" />
      <workItem from="1684155780926" duration="10338000" />
      <workItem from="1684173660795" duration="105000" />
      <workItem from="1684174077895" duration="2293000" />
      <workItem from="1684223550763" duration="8768000" />
      <workItem from="1684747927086" duration="1536000" />
      <workItem from="1684752515695" duration="2829000" />
      <workItem from="1684770782184" duration="2658000" />
      <workItem from="1685089150353" duration="13669000" />
      <workItem from="1685642412852" duration="4683000" />
      <workItem from="1685698892008" duration="94000" />
      <workItem from="1685711539556" duration="698000" />
      <workItem from="1688393061731" duration="1490000" />
      <workItem from="1690380517550" duration="2041000" />
      <workItem from="1690793120649" duration="150000" />
      <workItem from="1690793280573" duration="1265000" />
      <workItem from="1690794564574" duration="92016000" />
      <workItem from="1691761003074" duration="1734000" />
      <workItem from="1693208392236" duration="35599000" />
      <workItem from="1695828004642" duration="755000" />
      <workItem from="1695828826109" duration="604000" />
      <workItem from="1696928953598" duration="68390000" />
      <workItem from="1697619584275" duration="21347000" />
      <workItem from="1697645283334" duration="143000" />
      <workItem from="1697645467506" duration="309000" />
      <workItem from="1697645821186" duration="740000" />
      <workItem from="1697646588523" duration="2043000" />
      <workItem from="1697709485380" duration="18581000" />
      <workItem from="1700234121258" duration="526000" />
      <workItem from="1700234675068" duration="3899000" />
      <workItem from="1700476375201" duration="20664000" />
      <workItem from="1701094402909" duration="8416000" />
      <workItem from="1701695067317" duration="15754000" />
      <workItem from="1702675222215" duration="621000" />
      <workItem from="1704976078646" duration="29000" />
      <workItem from="1704976126081" duration="26214000" />
      <workItem from="1708347689700" duration="11953000" />
      <workItem from="1709887514646" duration="6368000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/comma/individual.py</url>
          <line>3</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="python-exception">
          <properties notifyOnTerminate="true" exception="BaseException">
            <option name="notifyOnTerminate" value="true" />
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="tests">
        <watch expression="sample_set" language="Python" />
        <watch expression="sample_set = Individual.populate_ipf(size, dir_params)" language="Python" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_individual_TestIndividual_test_long_covid.coverage" NAME="pytest for test_individual.TestIndividual.test_long_covid Coverage Results" MODIFIED="1701870180695" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_individual_TestIndividual_test_populate_ipf.coverage" NAME="pytest for test_individual.TestIndividual.test_populate_ipf Coverage Results" MODIFIED="1697624100096" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_hypothesis_TestHypothesis_test_adjust_cases.coverage" NAME="pytest for test_hypothesis.TestHypothesis.test_adjust_cases Coverage Results" MODIFIED="1701100253847" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$model.coverage" NAME="model Coverage Results" MODIFIED="1690809271787" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/comma" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_ipf_sampling_test_data_sampling_ipf.coverage" NAME="pytest for test_ipf_sampling.test_data_sampling_ipf Coverage Results" MODIFIED="1690990461133" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_in_test_model_py.coverage" NAME="pytest in test_model.py Coverage Results" MODIFIED="1709888801286" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_in_test_ipf_sampling_py.coverage" NAME="pytest in test_ipf_sampling.py Coverage Results" MODIFIED="1708357738300" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_in_test_individual_py.coverage" NAME="pytest in test_individual.py Coverage Results" MODIFIED="1709890587558" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_hypothesis_TestHypothesis_test_no_scaling_warning.coverage" NAME="pytest for test_hypothesis.TestHypothesis.test_no_scaling_warning Coverage Results" MODIFIED="1701100249568" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_hypothesis_TestHypothesis_test_compute_time_period.coverage" NAME="pytest for test_hypothesis.TestHypothesis.test_compute_time_period Coverage Results" MODIFIED="1701100274976" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_ipf_sampling_TestDataSamplingIPF_test_data_sampling_ipf.coverage" NAME="pytest for test_ipf_sampling.TestDataSamplingIPF.test_data_sampling_ipf Coverage Results" MODIFIED="1704979891877" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_hypothesis_TestHypothesis_test_range_error.coverage" NAME="pytest for test_hypothesis.TestHypothesis.test_range_error Coverage Results" MODIFIED="1701100177093" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_hypothesis_TestHypothesis.coverage" NAME="pytest for test_hypothesis.TestHypothesis Coverage Results" MODIFIED="1697461420708" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_hypothesis_TestHypothesis_test_get_covid_data.coverage" NAME="pytest for test_hypothesis.TestHypothesis.test_get_covid_data Coverage Results" MODIFIED="1701101678026" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_individual_TestIndividual_test_actions_when_positive.coverage" NAME="pytest for test_individual.TestIndividual.test_actions_when_positive Coverage Results" MODIFIED="1701870199101" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_individual_test_populate.coverage" NAME="pytest for test_individual.test_populate Coverage Results" MODIFIED="1691408894293" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_hypothesis_TestHypothesis_test_scaling_warning.coverage" NAME="pytest for test_hypothesis.TestHypothesis.test_scaling_warning Coverage Results" MODIFIED="1701100244811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$.coverage" NAME=" Coverage Results" MODIFIED="1690801081206" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_in_test_hypothesis_py.coverage" NAME="pytest in test_hypothesis.py Coverage Results" MODIFIED="1708357380837" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_model_TestModel_test_recovery_status_reset.coverage" NAME="pytest for test_model.TestModel.test_recovery_status_reset Coverage Results" MODIFIED="1701706293474" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_for_test_hypothesis_TestHypothesis_test_scaling.coverage" NAME="pytest for test_hypothesis.TestHypothesis.test_scaling Coverage Results" MODIFIED="1701699313890" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/test_individual_py$pytest_in_test_validate_csvs_py.coverage" NAME="pytest in test_validate_csvs.py Coverage Results" MODIFIED="1706539528018" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>